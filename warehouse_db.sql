CREATE DATABASE warehouse_db;
USE warehouse_db;

SHOW COLUMNS FROM phieu_xuat_kho;

-- Ph·∫ßn b·∫£ng cho t√†i kho·∫£n , th√¥ng tin t√†i kho·∫£n
CREATE TABLE users (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  email VARCHAR(100) UNIQUE NOT NULL,
  password VARCHAR(255) NOT NULL,
  role ENUM('user', 'admin', 'staff') DEFAULT 'user',
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE user_info (
  id INT AUTO_INCREMENT PRIMARY KEY,
  user_id INT NOT NULL UNIQUE,
  full_name VARCHAR(255),
  date_of_birth DATE,
  gender VARCHAR(10),
  address TEXT,
  phone VARCHAR(20),
  image_url TEXT,
  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

UPDATE users SET role = 'admin' WHERE id = 1;
UPDATE users SET role = 'staff' WHERE id = 2;

/*Trigger t·ª± ƒë·ªông nh·∫≠p t√™n fullname l√™n name*/
DELIMITER //

-- Khi UPDATE user_info.full_name
CREATE TRIGGER sync_name_after_update
AFTER UPDATE ON user_info
FOR EACH ROW
BEGIN
  IF NEW.full_name <> OLD.full_name THEN
    UPDATE users SET name = NEW.full_name WHERE id = NEW.user_id;
  END IF;
END;
//

-- Khi INSERT user_info (ho·∫∑c INSERT ON DUPLICATE KEY UPDATE)
CREATE TRIGGER sync_name_after_insert
AFTER INSERT ON user_info
FOR EACH ROW
BEGIN
  UPDATE users SET name = NEW.full_name WHERE id = NEW.user_id;
END;
//

DELIMITER ;

select * from users;
select * from user_info;

DROP TABLE IF EXISTS user_info;
DROP TABLE IF EXISTS users;

-- Ph·∫ßn b·∫£ng cho phi·∫øu nh·∫≠p
CREATE TABLE phieu_nhap_kho (
  id INT AUTO_INCREMENT PRIMARY KEY,
  receipt_code VARCHAR(50) UNIQUE,
  created_date DATETIME DEFAULT CURRENT_TIMESTAMP,
  supplier_name VARCHAR(255) NOT NULL,
  logo_url TEXT,
  supplier_address TEXT,
  
   -- üë§ ƒê·∫°i di·ªán kh√°ch h√†ng (nh√† cung c·∫•p)
  representative_name VARCHAR(100),
  representative_email VARCHAR(100),
  representative_phone VARCHAR(20),

  user_id INT NOT NULL,
  total_amount DECIMAL(15,2) DEFAULT 0,

  meeting_date DATE,
  
  staff_account_name VARCHAR(100),
  staff_account_email VARCHAR(100),
  admin_account_name VARCHAR(100),
  admin_account_email VARCHAR(100),

  note TEXT,
  note_admin TEXT,

  -- üîÅ Ch·ªâ c√≤n 3 tr·∫°ng th√°i
  trang_thai ENUM(
    'ƒê√£ g·ª≠i phi·∫øu',
    'ƒê√£ duy·ªát',
    'ƒê√£ nh·∫≠p h√†ng v√†o kho',
    'ƒê√£ h·ªßy'
  ) DEFAULT 'ƒê√£ g·ª≠i phi·∫øu',
  
  da_xuat_hoa_don BOOLEAN DEFAULT false,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,

  FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE phieu_nhap_kho_chi_tiet (
  id INT AUTO_INCREMENT PRIMARY KEY,
  phieu_nhap_kho_id INT NOT NULL,
  item_no INT,                            -- S·ªë th·ª© t·ª± d√≤ng
  image_url TEXT,                         -- H√¨nh ·∫£nh s·∫£n ph·∫©m
  product_name VARCHAR(255),             -- T√™n s·∫£n ph·∫©m
  product_type VARCHAR(100),             -- Lo·∫°i s·∫£n ph·∫©m (M·ªöI)
  product_code VARCHAR(100),             -- M√£ s·∫£n ph·∫©m (M·ªöI)
  unit VARCHAR(50),                      -- ƒê∆°n v·ªã
  weight DECIMAL(10,2),                  -- Kh·ªëi l∆∞·ª£ng
  area  FLOAT DEFAULT 0,				-- Di·ªán t√≠ch
  manufacture_date DATE,                 -- Ng√†y s·∫£n xu·∫•t
  expiry_date DATE,                      -- H·∫°n s·ª≠ d·ª•ng
  quantity INT,                          -- S·ªë l∆∞·ª£ng
  unit_price DECIMAL(15,2),              -- ƒê∆°n gi√°
  total_price DECIMAL(15,2),             -- Th√†nh ti·ªÅn

  FOREIGN KEY (phieu_nhap_kho_id) REFERENCES phieu_nhap_kho(id) ON DELETE CASCADE
);

select * from phieu_nhap_kho ;
select * from phieu_nhap_kho_chi_tiet;

DROP TABLE IF EXISTS phieu_nhap_kho_chi_tiet;
DROP TABLE IF EXISTS phieu_nhap_kho;

-- Ph·∫ßn b·∫£ng phi·∫øu xu·∫•t kho
CREATE TABLE phieu_xuat_kho (
  id INT AUTO_INCREMENT PRIMARY KEY,                     -- M√£ ID t·ª± tƒÉng
  receipt_code VARCHAR(50) UNIQUE,                       -- M√£ phi·∫øu xu·∫•t (v√≠ d·ª•: PXK20250703-001)
  created_date DATETIME DEFAULT CURRENT_TIMESTAMP,
  receiver_name VARCHAR(255) NOT NULL,                   -- T√™n ng∆∞·ªùi nh·∫≠n h√†ng
  receiver_address TEXT,                                 -- ƒê·ªãa ch·ªâ nh·∫≠n h√†ng
  logo_url TEXT,                                         -- Logo ƒë∆°n v·ªã nh·∫≠n h√†ng (n·∫øu c√≥)

  user_id INT NOT NULL,                                  -- ID ng∆∞·ªùi t·∫°o phi·∫øu (li√™n k·∫øt b·∫£ng users)
  total_amount DECIMAL(15,2) DEFAULT 0,                  -- T·ªïng ti·ªÅn phi·∫øu xu·∫•t
  total_weight DECIMAL(15,2) DEFAULT 0,
  
  -- üë§ ƒê·∫°i di·ªán kh√°ch h√†ng (nh√† cung c·∫•p)
  representative_name VARCHAR(100),
  representative_email VARCHAR(100),
  representative_phone VARCHAR(20),

  delivery_date DATE,                                    -- Ng√†y d·ª± ki·∫øn giao h√†ng
  
  staff_account_name VARCHAR(100),
  staff_account_email VARCHAR(100),                     -- Email nh√¢n vi√™n x·ª≠ l√Ω
  admin_account_name VARCHAR(100),
  admin_account_email VARCHAR(100),                     -- Email qu·∫£n l√Ω duy·ªát

  note TEXT,                                             -- Ghi ch√∫ th√™m
  note_admin TEXT,


	trang_thai ENUM(
    'ƒê√£ g·ª≠i phi·∫øu', 
    'ƒê√£ duy·ªát', 
    'ƒê√£ xu·∫•t h√†ng kh·ªèi kho',
    'ƒê√£ h·ªßy'
  ) DEFAULT 'ƒê√£ g·ª≠i phi·∫øu',                                -- Tr·∫°ng th√°i phi·∫øu
  
  da_xuat_hoa_don BOOLEAN DEFAULT false,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,              -- Ng√†y t·∫°o phi·∫øu

  FOREIGN KEY (user_id) REFERENCES users(id)             -- Li√™n k·∫øt v·ªõi ng∆∞·ªùi d√πng
);

CREATE TABLE phieu_xuat_kho_chi_tiet (
  id INT AUTO_INCREMENT PRIMARY KEY,                    -- ID chi ti·∫øt
  phieu_xuat_kho_id INT NOT NULL,                       -- ID phi·∫øu xu·∫•t (li√™n k·∫øt)
  item_no INT,                                          -- S·ªë th·ª© t·ª± s·∫£n ph·∫©m
  image_url TEXT,                                       -- ·∫¢nh minh h·ªça s·∫£n ph·∫©m
  product_name VARCHAR(255),                            -- T√™n s·∫£n ph·∫©m
  product_type VARCHAR(100),                            -- Lo·∫°i s·∫£n ph·∫©m
  product_code VARCHAR(100),                            -- M√£ s·∫£n ph·∫©m
  unit VARCHAR(50),                                     -- ƒê∆°n v·ªã (kg, th√πng,...)
  weight_per_unit DECIMAL(10,2), 
  weight DECIMAL(10,2),                                 -- Kh·ªëi l∆∞·ª£ng
  manufacture_date DATE,                                -- Ng√†y s·∫£n xu·∫•t
  expiry_date DATE,                                     -- H·∫°n s·ª≠ d·ª•ng
  quantity INT,                                         -- S·ªë l∆∞·ª£ng
  unit_price DECIMAL(15,2),                             -- ƒê∆°n gi√°
  total_price DECIMAL(15,2),                            -- Th√†nh ti·ªÅn = SL √ó ƒê∆°n gi√°
  

  FOREIGN KEY (phieu_xuat_kho_id) REFERENCES phieu_xuat_kho(id) ON DELETE CASCADE
);

select * from phieu_xuat_kho ;
select * from phieu_xuat_kho_chi_tiet;
  
DROP TABLE IF EXISTS phieu_xuat_kho_chi_tiet;
DROP TABLE IF EXISTS phieu_xuat_kho;

/*B·∫£ng t·ªïng quan kho , s·ª©c ch·ª©a*/
CREATE TABLE tong_suc_chua (
  id INT PRIMARY KEY,                     -- Lu√¥n l√† 1
  tong_suc_chua_kg FLOAT,
  tong_da_dung_kg FLOAT,

  tong_suc_chua_m2 FLOAT,
  tong_da_dung_m2 FLOAT,

  cap_nhat_luc DATETIME
);

/*B·∫£ng khu v·ª±c kho*/
CREATE TABLE khu_vuc (
  id INT AUTO_INCREMENT PRIMARY KEY,
  ten_khu_vuc VARCHAR(100) UNIQUE NOT NULL,
  mo_ta TEXT,

  suc_chua_kg FLOAT DEFAULT 50000,       -- S·ª©c ch·ª©a t·ªëi ƒëa v·ªÅ kh·ªëi l∆∞·ª£ng
  da_su_dung_kg FLOAT DEFAULT 0,         -- ƒê√£ s·ª≠ d·ª•ng bao nhi√™u kg

  suc_chua_m2 FLOAT DEFAULT 500,        -- S·ª©c ch·ª©a t·ªëi ƒëa v·ªÅ di·ªán t√≠ch
  da_su_dung_m2 FLOAT DEFAULT 0          -- ƒê√£ s·ª≠ d·ª•ng bao nhi√™u m¬≤
);


INSERT INTO khu_vuc (ten_khu_vuc, mo_ta)
VALUES 
('ƒê·ªì ƒÉn & ƒê·ªì u·ªëng', 'L∆∞u tr·ªØ th·ª±c ph·∫©m v√† ƒë·ªì u·ªëng c√°c lo·∫°i'),
('M·ªπ ph·∫©m & chƒÉm s√≥c c√° nh√¢n', 'C√°c s·∫£n ph·∫©m m·ªπ ph·∫©m, chƒÉm s√≥c c√° nh√¢n'),
('Th·ªùi trang & gi√†y d√©p', 'S·∫£n ph·∫©m th·ªùi trang, qu·∫ßn √°o, gi√†y d√©p'),
('Thi·∫øt b·ªã ƒëi·ªán t·ª≠', 'C√°c thi·∫øt b·ªã c√¥ng ngh·ªá, ƒëi·ªán t·ª≠'),
('ƒê·ªì d√πng gia ƒë√¨nh', 'N·ªìi ni√™u, n∆∞·ªõc lau nh√†, n∆∞·ªõc r·ª≠a ch√©n, v·∫≠t d·ª•ng gia ƒë√¨nh');

/*B·∫£ng s·∫£n ph·∫©m*/
CREATE TABLE products (
  id INT AUTO_INCREMENT PRIMARY KEY,
  product_code VARCHAR(100) NOT NULL UNIQUE,    -- M√£ s·∫£n ph·∫©m chung
  product_name VARCHAR(255) NOT NULL,
  product_type VARCHAR(255) NOT NULL,
  unit VARCHAR(50),
  image_url TEXT,

  -- T·ªïng s·ªë l∆∞·ª£ng, kh·ªëi l∆∞·ª£ng, di·ªán t√≠ch t·ªïng th·ªÉ
  total_quantity INT DEFAULT 0,
  total_weight DECIMAL(10,2) DEFAULT 0,
  total_area DECIMAL(10,2) DEFAULT 0,

  -- Th√¥ng tin th√™m n·∫øu c·∫ßn
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

/*ch√®n v√†o ƒë·ªÉ gom*/
INSERT INTO products (product_code, product_name, product_type, unit, image_url, total_quantity, total_weight, total_area)
SELECT
  product_code,
  product_name,
  product_type,
  unit,
  image_url,
  SUM(quantity) AS total_quantity,
  SUM(weight) AS total_weight,
  SUM(area) AS total_area
FROM products_detail
GROUP BY product_code, product_name, product_type, unit, image_url;


/*B·∫£ng danh s√°ch s·∫£n ph·∫©m*/
CREATE TABLE products_detail (
  id INT AUTO_INCREMENT PRIMARY KEY,

  -- Th√¥ng tin c∆° b·∫£n
  product_code VARCHAR(100) NOT NULL,         -- M√£ s·∫£n ph·∫©m
  old_product_code VARCHAR(100),              -- M√£ c≈© (n·∫øu c√≥ ch·ªânh s·ª≠a)
  product_name VARCHAR(255) NOT NULL,         -- T√™n s·∫£n ph·∫©m
  product_type VARCHAR(255) NOT NULL,         -- Lo·∫°i h√†ng h√≥a
  unit VARCHAR(50),                           -- ƒê∆°n v·ªã t√≠nh (th√πng, chai,...)
  image_url TEXT,                             -- H√¨nh ·∫£nh minh h·ªça

  -- S·ªë l∆∞·ª£ng & thu·ªôc t√≠nh v·∫≠t l√Ω
  quantity INT DEFAULT 0,                     -- S·ªë l∆∞·ª£ng
  weight FLOAT DEFAULT 0,                     -- T·ªïng kh·ªëi l∆∞·ª£ng (kg)
  area FLOAT DEFAULT 0,                       -- T·ªïng di·ªán t√≠ch (m¬≤)
  weight_per_unit FLOAT DEFAULT 0,            -- Kh·ªëi l∆∞·ª£ng m·ªói ƒë∆°n v·ªã
  area_per_unit FLOAT DEFAULT 0,              -- Di·ªán t√≠ch m·ªói ƒë∆°n v·ªã

  -- Ng√†y th√°ng
  manufacture_date DATE,                      -- Ng√†y s·∫£n xu·∫•t
  expiry_date DATE,                           -- H·∫°n s·ª≠ d·ª•ng
  import_date DATETIME DEFAULT CURRENT_TIMESTAMP, -- Ng√†y nh·∫≠p

  -- Gi√° v√† th√†nh ti·ªÅn
  unit_price DECIMAL(15,2),                   -- Gi√° m·ªói ƒë∆°n v·ªã
  total_price DECIMAL(15,2),                  -- T·ªïng gi√°

  -- V·ªã tr√≠ v√† kho
  location VARCHAR(20),                       -- V·ªã tr√≠ trong khu
  khu_vuc_id INT,                             -- Khu v·ª±c l∆∞u tr·ªØ
  FOREIGN KEY (khu_vuc_id) REFERENCES khu_vuc(id),

  -- Th√¥ng tin ƒë·ªëi t√°c / phi·∫øu nh·∫≠p
  receipt_code VARCHAR(100),                  -- M√£ phi·∫øu nh·∫≠p
  supplier_name VARCHAR(255),                 -- T√™n nh√† cung c·∫•p
  logo_url TEXT,                               -- Logo nh√† cung c·∫•p
  
  is_checking BOOLEAN DEFAULT 0,
  
   -- C√°c c·ªôt th√™m t·ª´ ALTER
  total_weight DECIMAL(10,2) DEFAULT 0,
  total_quantity INT DEFAULT 0,
  total_area DECIMAL(10,2) DEFAULT 0
);


/*Trigger t·ª± ƒë·ªông t√≠nh weight_per_unit, area_per_unit*/
DELIMITER //

CREATE TRIGGER trg_products_detail_before_insert
BEFORE INSERT ON products_detail
FOR EACH ROW
BEGIN
  IF NEW.quantity > 0 THEN
    SET NEW.weight_per_unit = NEW.weight / NEW.quantity;
    SET NEW.area_per_unit = NEW.area / NEW.quantity;
  ELSE
    SET NEW.weight_per_unit = 0;
    SET NEW.area_per_unit = 0;
  END IF;
END;
//

DELIMITER ;

DROP TRIGGER IF EXISTS trg_set_location_before_insert;
/*Trigger t·ª± ƒë·ªông tƒÉng location khi th√™m h√†ng v√†o khu v·ª±c*/
DELIMITER //

CREATE TRIGGER trg_set_location_before_insert
BEFORE INSERT ON products_detail
FOR EACH ROW
BEGIN
  DECLARE max_num INT DEFAULT 0;
  DECLARE location_code_prefix VARCHAR(10);

  IF NEW.khu_vuc_id IS NOT NULL THEN
    -- T√≠nh ti·ªÅn t·ªë KVx (v√≠ d·ª•: KV1)
    SET location_code_prefix = CONCAT('KV', NEW.khu_vuc_id, '_L');

    -- T√¨m s·ªë l·ªõn nh·∫•t ƒë√£ ƒë∆∞·ª£c g√°n trong khu ƒë√≥ (t√°ch s·ªë cu·ªëi c√πng t·ª´ location)
    SELECT IFNULL(
             MAX(CAST(SUBSTRING_INDEX(location, 'L', -1) AS UNSIGNED)), 0
           )
    INTO max_num
    FROM products_detail
    WHERE khu_vuc_id = NEW.khu_vuc_id;

    -- G√°n location theo format: KVx_Lxxx
    SET NEW.location = CONCAT(location_code_prefix, LPAD(max_num + 1, 3, '0'));
  END IF;
END;
//

DELIMITER ;

select * from products_detail;
DROP TABLE IF EXISTS products_detail;

-- T·∫°o c√°c view ƒë·ªÉ xem 
/*Xem t·ªïng s·ª©c ch·ª©a c·ªßa kho, ƒë√£ s·ª≠ d·ª•ng , c√≤n tr·ªëng*/
CREATE OR REPLACE VIEW vw_tong_suc_chua_kho AS
SELECT
  SUM(suc_chua_kg) AS tong_suc_chua_kg,
  SUM(da_su_dung_kg) AS tong_da_dung_kg,
  SUM(suc_chua_kg) - SUM(da_su_dung_kg) AS suc_chua_kg_con_lai,
  SUM(suc_chua_m2) AS tong_suc_chua_m2,
  SUM(da_su_dung_m2) AS tong_da_dung_m2,
  SUM(suc_chua_m2) - SUM(da_su_dung_m2) AS suc_chua_m2_con_lai
FROM khu_vuc;


/*Th·ªëng k√™ t·ªïng quan khu v·ª±c*/
CREATE OR REPLACE VIEW thong_ke_khu_vuc_tong_quan AS
SELECT 
    kv.id AS khu_vuc_id,
    kv.ten_khu_vuc,
    kv.mo_ta,
    kv.suc_chua_kg,
    IFNULL(SUM(pd.weight), 0) AS da_su_dung_kg, -- ƒë√¢y l√† t·ªïng kh·ªëi l∆∞·ª£ng th·ª±c t·∫ø chi·∫øm ch·ªó
    kv.suc_chua_m2,
    kv.da_su_dung_m2,
    COUNT(pd.id) AS so_san_pham,
    IFNULL(SUM(pd.quantity), 0) AS tong_so_luong,
    IFNULL(SUM(pd.weight), 0) AS tong_khoi_luong,
    IFNULL(SUM(pd.area), 0) AS tong_dien_tich
FROM khu_vuc kv
LEFT JOIN products_detail pd ON kv.id = pd.khu_vuc_id
GROUP BY kv.id
ORDER BY kv.id ASC;

SELECT 
    kv.id AS khu_vuc_id,
    kv.ten_khu_vuc,
    kv.suc_chua_kg,
    IFNULL(SUM(pd.weight), 0) AS da_su_dung_kg
FROM khu_vuc kv
LEFT JOIN products_detail pd ON kv.id = pd.khu_vuc_id
GROUP BY kv.id;

SELECT 
    kv.id AS khu_vuc_id,
    kv.ten_khu_vuc,
    kv.suc_chua_kg,
    IFNULL(SUM(pd.weight), 0) AS da_su_dung_kg,
    FLOOR((kv.suc_chua_kg - IFNULL(SUM(pd.weight), 0)) / 500) AS so_vi_tri_con_trong
FROM khu_vuc kv
LEFT JOIN products_detail pd ON kv.id = pd.khu_vuc_id
GROUP BY kv.id, kv.ten_khu_vuc, kv.suc_chua_kg;

/*Xem danh s√°ch c√°c s·∫£n ph·∫©m trong khu*/
CREATE OR REPLACE VIEW danh_sach_san_pham_theo_khu_vuc AS
SELECT 
    pd.id AS product_id,
    pd.product_code,
    pd.product_name,
    pd.product_type,
    pd.quantity,
    pd.weight,
    pd.area,
    pd.unit_price,
    pd.total_price,
    pd.manufacture_date,
    pd.expiry_date,
    pd.import_date,
    kv.id AS khu_vuc_id,
    kv.ten_khu_vuc
FROM products_detail pd
JOIN khu_vuc kv ON pd.khu_vuc_id = kv.id
ORDER BY kv.id ASC, pd.import_date DESC;

SHOW TRIGGERS;

CREATE TABLE location_transfer_log (
  id INT AUTO_INCREMENT PRIMARY KEY,
  product_code VARCHAR(100),
  from_location VARCHAR(50),
  to_location VARCHAR(50),
  user_email VARCHAR(100),
  transfer_time DATETIME DEFAULT CURRENT_TIMESTAMP
);
   
CREATE TABLE log_tru_hang (
  id INT PRIMARY KEY AUTO_INCREMENT,
  product_code VARCHAR(50),
  pallet_name VARCHAR(50),
  quantity_deducted INT,
  timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
  phieu_xuat_id INT
);

drop table location_transfer_log;
drop table log_tru_hang;

-- B·∫£ng l∆∞u th√¥ng tin ƒë·ª£t ki·ªÉm k√™
CREATE TABLE kiem_ke_dot (
  id INT AUTO_INCREMENT PRIMARY KEY,
  ma_dot VARCHAR(50) NOT NULL UNIQUE,           -- M√£ ƒë·ª£t ki·ªÉm k√™ t·ª± ƒë·ªông (v√≠ d·ª•: KK001_27072025)
  ten_dot VARCHAR(255) NOT NULL,                -- T√™n ƒë·ª£t do Admin nh·∫≠p (v√≠ d·ª•: "Ki·ªÉm k√™ Qu√Ω 3/2025")
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  created_by_email VARCHAR(255),                 -- Email ng∆∞·ªùi t·∫°o ƒë·ª£t ki·ªÉm k√™ (Admin)
   status VARCHAR(20) DEFAULT 'dang_kiem'  
);

-- B·∫£ng l∆∞u chi ti·∫øt c√°c s·∫£n ph·∫©m trong t·ª´ng ƒë·ª£t ki·ªÉm k√™
CREATE TABLE kiem_ke_chi_tiet (
  id INT AUTO_INCREMENT PRIMARY KEY,
  dot_id INT NOT NULL,                     -- ID c·ªßa ƒë·ª£t ki·ªÉm k√™ (kh√≥a ngo·∫°i t·ªõi kiem_ke_dot)
  product_detail_id INT NOT NULL,          -- ID c·ªßa s·∫£n ph·∫©m c·∫ßn ki·ªÉm (kh√≥a ngo·∫°i t·ªõi products_detail.id)
  actual_quantity INT,                     -- S·ªë l∆∞·ª£ng th·ª±c t·∫ø nh√¢n vi√™n ƒë√£ ƒë·∫øm
  checked_by_email VARCHAR(255),           -- Email c·ªßa nh√¢n vi√™n ƒë√£ th·ª±c hi·ªán ki·ªÉm ƒë·∫øm v√† l∆∞u (t√πy ch·ªçn)
  ghi_chu TEXT,                            -- Ghi ch√∫ b·ªï sung (t√πy ch·ªçn)
  checked_at DATETIME DEFAULT CURRENT_TIMESTAMP, -- Th·ªùi ƒëi·ªÉm nh√¢n vi√™n ki·ªÉm ƒë·∫øm (c√≥ th·ªÉ tr√πng v·ªõi updated_at n·∫øu l∆∞u l·∫ßn ƒë·∫ßu)
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, -- Th·ªùi ƒëi·ªÉm c·∫≠p nh·∫≠t cu·ªëi c√πng
  
  -- R√†ng bu·ªôc kh√≥a ngo·∫°i
  FOREIGN KEY (dot_id) REFERENCES kiem_ke_dot(id) ON DELETE CASCADE,
  FOREIGN KEY (product_detail_id) REFERENCES products_detail(id) ON DELETE CASCADE,
  
  -- ƒê·∫£m b·∫£o m·ªói s·∫£n ph·∫©m ch·ªâ xu·∫•t hi·ªán m·ªôt l·∫ßn trong m·ªôt ƒë·ª£t ki·ªÉm k√™ duy nh·∫•t
  UNIQUE (dot_id, product_detail_id)       
);

select * from kiem_ke_dot;
select * from kiem_ke_chi_tiet;

drop table kiem_ke_chi_tiet;
drop table kiem_ke_dot;


