
import { Component, OnInit } from '@angular/core';
import { CommonModule } from '@angular/common';
import { HttpClient } from '@angular/common/http';
import { FormsModule } from '@angular/forms';

@Component({
  selector: 'app-duyetphieuxuat',
  standalone: true,
  imports: [CommonModule, FormsModule],
  templateUrl: './duyetphieuxuat.component.html',
  styleUrls: ['./duyetphieuxuat.component.css']
})
export class DuyetphieuxuatComponent implements OnInit {
  danhSachPhieu: any[] = [];
  danhSachPhieuGoc: any[] = []; // ‚úÖ TH√äM D√íNG N√ÄY

  selectedPhieu: any = null;
  popupNhapKhoMo: boolean = false;
  danhSachSanPhamNhap: any[] = [];
  filterCode: string = '';
  danhSachKhuVuc: any[] = [];
  danhSachMaTrung: string[] | null = null; // null: ch∆∞a ki·ªÉm tra, []: kh√¥ng tr√πng, ['A1']...

  maCanKiemTra: string = '';
  ketQuaSanPham: any = null;

  // L·∫•y th√¥ng tin ng∆∞·ªùi duy·ªát (admin hi·ªán t·∫°i)
  adminName = sessionStorage.getItem('name') || '';
  adminEmail = sessionStorage.getItem('email') || '';

  // Ph·∫£n h·ªìi h·ªá th·ªëng nh·∫≠p v√†o
  phanHoiHeThong: string = '';

  filter = {
  keyword: '',
  ngayBatDau: '',
  ngayKetThuc: '',
  trangThai: ''
};

  constructor(private http: HttpClient) {}

  ngOnInit(): void {
    this.loadPhieu();
  }

  loadPhieu() {
    this.http.get<any[]>('http://localhost:3000/api/phieu-xuat').subscribe(data => {
      this.danhSachPhieuGoc = data;
      this.danhSachPhieu = [...data];
    });
  }

  locPhieu() {
  const { keyword, ngayBatDau, ngayKetThuc, trangThai } = this.filter;

  this.danhSachPhieu = this.danhSachPhieuGoc.filter(p => {
    const matchKeyword = !keyword ||
      p.receipt_code.toLowerCase().includes(keyword.toLowerCase()) ||
      p.receiver_name.toLowerCase().includes(keyword.toLowerCase());

    const matchTrangThai = !trangThai || p.trang_thai === trangThai;

    const created = new Date(p.created_date);
    const matchNgayBatDau = !ngayBatDau || created >= new Date(ngayBatDau);
    const matchNgayKetThuc = !ngayKetThuc || created <= new Date(ngayKetThuc);

    return matchKeyword && matchTrangThai && matchNgayBatDau && matchNgayKetThuc;
  });
}


  xemChiTiet(phieu: any) {
    this.selectedPhieu = phieu;
    this.phanHoiHeThong = phieu.note_admin || '';

    // üëá L·∫•y s·∫£n ph·∫©m chi ti·∫øt c·ªßa phi·∫øu
    this.http.get<any[]>(`http://localhost:3000/api/phieu-xuat/${phieu.id}/san-pham`)
      .subscribe(data => {
        this.selectedPhieu.products = data.map(sp => ({
          ...sp,
          manufacture_date: sp.manufacture_date?.slice(0, 10),
          expiry_date: sp.expiry_date?.slice(0, 10),
          total_price: sp.unit_price * sp.quantity
        }));
      }, err => {
        console.error('‚ùå Kh√¥ng l·∫•y ƒë∆∞·ª£c danh s√°ch s·∫£n ph·∫©m c·ªßa phi·∫øu xu·∫•t', err);
        this.selectedPhieu.products = []; // ƒë·ªÉ tr√°nh l·ªói undefined
      });
  }


  dongChiTiet() {
    this.selectedPhieu = null;
    this.phanHoiHeThong = '';
  }

  hoanTatKiemTra() {
    if (!this.selectedPhieu || !this.selectedPhieu.products || this.selectedPhieu.products.length === 0) {
      alert('‚ùå Kh√¥ng c√≥ s·∫£n ph·∫©m n√†o ƒë·ªÉ ki·ªÉm tra.');
      return;
    }

    const checkPromises = this.selectedPhieu.products.map((sp: any) => {
      return this.http.get<any>(`http://localhost:3000/api/products-detail/check-available/${sp.product_code}/${sp.quantity}`).toPromise();
    });

    Promise.all(checkPromises).then(results => {
      const khongDuHang = results.filter(r => !r.enough);

      if (khongDuHang.length > 0) {
        const danhSach = khongDuHang.map(sp => sp.product_code).join(', ');
        alert(`‚ùå Kh√¥ng th·ªÉ duy·ªát phi·∫øu v√¨ c√°c s·∫£n ph·∫©m sau kh√¥ng ƒë·ªß s·ªë l∆∞·ª£ng trong kho: ${danhSach}`);
        return;
      }

      // N·∫øu ƒë·ªß th√¨ c·∫≠p nh·∫≠t tr·∫°ng th√°i
      const newStatus = 'ƒê√£ duy·ªát';

      this.http.put(`http://localhost:3000/api/phieu-xuat/${this.selectedPhieu.id}/admin-cap-nhat`, {
        trang_thai: newStatus,
        note_admin: this.phanHoiHeThong,
        admin_account_email: this.adminEmail,
        admin_account_name: this.adminName
      }).subscribe(() => {
        alert('‚úÖ Ki·ªÉm tra ho√†n t·∫•t! Tr·∫°ng th√°i ƒë√£ c·∫≠p nh·∫≠t sang "ƒê√£ duy·ªát". B·∫°n c√≥ th·ªÉ xu·∫•t h√†ng.');

        // ‚úÖ C·∫≠p nh·∫≠t th√¥ng tin hi·ªÉn th·ªã
        this.selectedPhieu.trang_thai = newStatus;
        this.selectedPhieu.note_admin = this.phanHoiHeThong;
        this.selectedPhieu.admin_account_email = this.adminEmail;
        this.selectedPhieu.admin_account_name = this.adminName;

        // ‚úÖ T·ª± ƒë·ªông ƒë√≥ng popup
        this.popupNhapKhoMo = false;
      });
    }).catch(err => {
      console.error('‚ùå L·ªói ki·ªÉm tra s·ªë l∆∞·ª£ng s·∫£n ph·∫©m:', err);
      alert('‚ùå L·ªói khi ki·ªÉm tra s·ªë l∆∞·ª£ng s·∫£n ph·∫©m.');
    });
  }



  capNhatThanhTien(sp: any) {
    const unitPrice = Number(sp.unit_price) || 0;
    const quantity = Number(sp.quantity ?? 1); // n·∫øu undefined th√¨ m·∫∑c ƒë·ªãnh l√† 1
    sp.total_price = unitPrice * quantity;
    this.capNhatTongTien();
  }

  capNhatTongTien() {
    let total = 0;
    for (let sp of this.danhSachSanPhamNhap) {
      total += sp.total_price || 0;
    }
    if (this.selectedPhieu) {
      this.selectedPhieu.total_amount = total;
    }
  }

  kiemTraTrongKho() {
      if (!this.maCanKiemTra) {
        this.ketQuaSanPham = null;
        return;
      }

      this.http.get<any>(`http://localhost:3000/api/products-detail/check-ma/${this.maCanKiemTra}`).subscribe(res => {
        if (res.exists) {
          const product = res.product;

          // üëá Chuy·ªÉn ki·ªÉu r√µ r√†ng, tr√°nh undefined ho·∫∑c string
          product.quantity = Number(product.quantity) || 0;
          product.unit_price = Number(product.unit_price) || 0;
          product.weight_per_unit = Number(product.weight_per_unit) || 0;

          // üëá T√≠nh t·ªïng kh·ªëi l∆∞·ª£ng v√† t·ªïng ti·ªÅn
          product.total_weight = product.quantity * product.weight_per_unit;
          product.total_price = product.quantity * product.unit_price;

          this.ketQuaSanPham = product;
        } else {
          this.ketQuaSanPham = {};
        }
      }, err => {
        console.error('L·ªói ki·ªÉm tra s·∫£n ph·∫©m:', err);
        this.ketQuaSanPham = {};
      });
    }


  // X√°c nh·∫≠n xu·∫•t kho ch√≠nh th·ª©c
  xacNhanXuatKhoChinhThuc() {
    if (!this.selectedPhieu) return;

    const id = this.selectedPhieu.id;
    this.http.post(`http://localhost:3000/api/phieu-xuat/xac-nhan-xuat-kho/${id}`, {}).subscribe({
      next: (res: any) => {
        alert(res.message || '‚úîÔ∏è X√°c nh·∫≠n th√†nh c√¥ng');
        this.selectedPhieu.trang_thai = 'ƒê√£ xu·∫•t h√†ng kh·ªèi kho';
        this.popupNhapKhoMo = false;
        
      },
      error: (err) => {
        alert(err.error?.message || '‚ùå L·ªói khi x√°c nh·∫≠n xu·∫•t kho');
      }
    });
  }

//Nh·ªØng ch·ª©c nƒÉng n√†y ch∆∞a ki·ªÉm ch·ª©ng

  // G·ªçi API ƒë·ªÉ m·ªü popup x√°c nh·∫≠n
  moPopupNhapKho() {
    console.log('üì¢ ƒê√£ g·ªçi m·ªü popup');
    this.popupNhapKhoMo = true;

    // L·∫•y danh s√°ch s·∫£n ph·∫©m c·ªßa phi·∫øu nh·∫≠p
    this.http.get<any[]>(`http://localhost:3000/api/phieu-xuat/${this.selectedPhieu.id}/san-pham`)
      .subscribe(data => {
        this.danhSachSanPhamNhap = data.map(sp => ({
          ...sp,
          old_product_code: sp.product_code, // üëà l∆∞u m√£ c≈©
          trung_ma: false,
          // ƒê·ªãnh d·∫°ng l·∫°i ng√†y ƒë·ªÉ ph√π h·ª£p v·ªõi input type="date"
          manufacture_date: sp.manufacture_date ? sp.manufacture_date.slice(0, 10) : '',
          expiry_date: sp.expiry_date ? sp.expiry_date.slice(0, 10) : ''
        }));
      }, err => {
        console.error('‚ùå L·ªói khi l·∫•y s·∫£n ph·∫©m phi·∫øu:', err);
      });

    // L·∫•y danh s√°ch khu v·ª±c kho
    this.http.get<any[]>('http://localhost:3000/api/khu-vuc')
      .subscribe(data => {
        this.danhSachKhuVuc = data;
      }, err => {
        console.error('‚ùå L·ªói khi l·∫•y khu v·ª±c:', err);
      });
  }

  // ƒê√≥ng popup
  dongPopup() {
    this.popupNhapKhoMo = false;
    this.danhSachSanPhamNhap = [];
  }

  kiemTraTrungMa(sp: any) {
    if (!sp.product_code) {
      sp.trung_ma = false;
      return;
    }

    this.http.get<any>(`http://localhost:3000/api/products-detail/check-ma/${sp.product_code}`)
      .subscribe(data => {
        sp.trung_ma = data.exists; // ‚úÖ G√°n ch√≠nh x√°c
      }, error => {
        sp.trung_ma = false;
      });
  }

  onFileSelected(event: any, sp: any) {
    const file = event.target.files[0];
    if (file) {
      const formData = new FormData();
      formData.append('image', file);

      this.http.post<any>('http://localhost:3000/api/upload', formData).subscribe(res => {
        sp.image_url = res.imageUrl; // L∆∞u ƒë∆∞·ªùng d·∫´n ·∫£nh m·ªõi
      });
    }
  }

  huyPhieu(p: any) {
    if (p.trang_thai === 'ƒê√£ g·ª≠i phi·∫øu') {
      this.http.put(`http://localhost:3000/api/phieu-xuat-kho/${p.id}/huy`, { trang_thai: 'ƒê√£ h·ªßy' }).subscribe({
        next: () => {
          p.trang_thai = 'ƒê√£ h·ªßy';
        },
        error: () => {
          alert('H·ªßy phi·∫øu th·∫•t b·∫°i, vui l√≤ng th·ª≠ l·∫°i');
        }
      });
    }
  }


}
